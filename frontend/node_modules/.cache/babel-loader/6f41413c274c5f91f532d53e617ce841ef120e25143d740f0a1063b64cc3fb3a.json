{"ast":null,"code":"var _jsxFileName = \"/Users/trcxi/ducky-times/frontend/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  MongoClient\n} = require(\"mongodb\");\nconst client = new MongoClient(yourConnectionURI);\nconst express = require(\"express\");\nconst app = express();\n\n// Middleware to parse JSON\napp.use(express.json());\n\n// Route to handle POST requests to '/submit'\napp.post(\"/submit\", (req, res) => {\n  const data = req.body;\n  // Process and save data to the database\n  res.status(200).send(\"Response saved!\");\n});\n\n// Starting the server\napp.listen(3000, () => {\n  console.log(\"Server is running on port 3000\");\n});\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","MongoClient","require","client","yourConnectionURI","express","app","use","json","post","req","res","data","body","status","send","listen","console","log","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/trcxi/ducky-times/frontend/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst { MongoClient } = require(\"mongodb\");\nconst client = new MongoClient(yourConnectionURI);\n\nconst express = require(\"express\");\nconst app = express();\n\n// Middleware to parse JSON\napp.use(express.json());\n\n// Route to handle POST requests to '/submit'\napp.post(\"/submit\", (req, res) => {\n  const data = req.body;\n  // Process and save data to the database\n  res.status(200).send(\"Response saved!\");\n});\n\n// Starting the server\napp.listen(3000, () => {\n  console.log(\"Server is running on port 3000\");\n});\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAM;EAAEC;AAAY,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;AAC1C,MAAMC,MAAM,GAAG,IAAIF,WAAW,CAACG,iBAAiB,CAAC;AAEjD,MAAMC,OAAO,GAAGH,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMI,GAAG,GAAGD,OAAO,CAAC,CAAC;;AAErB;AACAC,GAAG,CAACC,GAAG,CAACF,OAAO,CAACG,IAAI,CAAC,CAAC,CAAC;;AAEvB;AACAF,GAAG,CAACG,IAAI,CAAC,SAAS,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAChC,MAAMC,IAAI,GAAGF,GAAG,CAACG,IAAI;EACrB;EACAF,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,iBAAiB,CAAC;AACzC,CAAC,CAAC;;AAEF;AACAT,GAAG,CAACU,MAAM,CAAC,IAAI,EAAE,MAAM;EACrBC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;AAC/C,CAAC,CAAC;AAEF,MAAMC,IAAI,GAAGvB,QAAQ,CAACwB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTvB,OAAA,CAACL,KAAK,CAAC6B,UAAU;EAAAC,QAAA,eACfzB,OAAA,CAACH,GAAG;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;;AAED;AACA;AACA;AACA/B,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}