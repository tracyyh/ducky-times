{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport let BREAKPOINT = /*#__PURE__*/function (BREAKPOINT) {\n  BREAKPOINT[BREAKPOINT[\"MOBILE\"] = 600] = \"MOBILE\";\n  BREAKPOINT[BREAKPOINT[\"MIDSIZE\"] = 1000] = \"MIDSIZE\";\n  BREAKPOINT[BREAKPOINT[\"DESKTOP\"] = 1200] = \"DESKTOP\";\n  return BREAKPOINT;\n}({});\nexport default function useBreakpoint() {\n  _s();\n  const [breakpoint, setBreakpoint] = useState(null);\n  const validateBreakpoint = () => {\n    if (window.matchMedia(`(max-width: ${BREAKPOINT.MOBILE}px)`).matches) {\n      setBreakpoint(BREAKPOINT.MOBILE);\n      return breakpoint;\n    }\n    if (window.matchMedia(`(max-width: ${BREAKPOINT.MIDSIZE}px)`).matches) {\n      setBreakpoint(BREAKPOINT.MIDSIZE);\n      return breakpoint;\n    } else setBreakpoint(BREAKPOINT.DESKTOP);\n  };\n  useEffect(() => {\n    validateBreakpoint();\n    window.addEventListener(\"resize\", validateBreakpoint);\n    return () => {\n      window.removeEventListener(\"resize\", validateBreakpoint);\n    };\n  });\n  return breakpoint;\n}\n_s(useBreakpoint, \"MzpaUUx3YsVs/VPQL7oe7ayxakE=\");","map":{"version":3,"names":["useEffect","useState","BREAKPOINT","useBreakpoint","_s","breakpoint","setBreakpoint","validateBreakpoint","window","matchMedia","MOBILE","matches","MIDSIZE","DESKTOP","addEventListener","removeEventListener"],"sources":["/Users/trcxi/ducky-times/frontend/src/helpers/useBreakpoint.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport enum BREAKPOINT {\n    MOBILE = 600,\n    MIDSIZE = 1000,\n    DESKTOP = 1200,\n}\n\nexport default function useBreakpoint() {\n\tconst [breakpoint, setBreakpoint] = useState<BREAKPOINT | null>(null);\n\n\tconst validateBreakpoint = () => {\n\t\tif (window.matchMedia(`(max-width: ${BREAKPOINT.MOBILE}px)`).matches) {\n\t\t\tsetBreakpoint(BREAKPOINT.MOBILE);\n\t\t\treturn breakpoint;\n\t\t}\n\t\tif (window.matchMedia(`(max-width: ${BREAKPOINT.MIDSIZE}px)`).matches) {\n\t\t\tsetBreakpoint(BREAKPOINT.MIDSIZE);\n\t\t\treturn breakpoint;\n\t\t} else setBreakpoint(BREAKPOINT.DESKTOP);\n\t};\n\n\tuseEffect(() => {\n\t\tvalidateBreakpoint();\n\t\twindow.addEventListener(\"resize\", validateBreakpoint);\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"resize\", validateBreakpoint);\n\t\t};\n\t});\n\n\treturn breakpoint;\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,WAAYC,UAAU,0BAAVA,UAAU;EAAVA,UAAU,CAAVA,UAAU;EAAVA,UAAU,CAAVA,UAAU;EAAVA,UAAU,CAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAMtB,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAoB,IAAI,CAAC;EAErE,MAAMM,kBAAkB,GAAGA,CAAA,KAAM;IAChC,IAAIC,MAAM,CAACC,UAAU,CAAE,eAAcP,UAAU,CAACQ,MAAO,KAAI,CAAC,CAACC,OAAO,EAAE;MACrEL,aAAa,CAACJ,UAAU,CAACQ,MAAM,CAAC;MAChC,OAAOL,UAAU;IAClB;IACA,IAAIG,MAAM,CAACC,UAAU,CAAE,eAAcP,UAAU,CAACU,OAAQ,KAAI,CAAC,CAACD,OAAO,EAAE;MACtEL,aAAa,CAACJ,UAAU,CAACU,OAAO,CAAC;MACjC,OAAOP,UAAU;IAClB,CAAC,MAAMC,aAAa,CAACJ,UAAU,CAACW,OAAO,CAAC;EACzC,CAAC;EAEDb,SAAS,CAAC,MAAM;IACfO,kBAAkB,CAAC,CAAC;IACpBC,MAAM,CAACM,gBAAgB,CAAC,QAAQ,EAAEP,kBAAkB,CAAC;IACrD,OAAO,MAAM;MACZC,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAAER,kBAAkB,CAAC;IACzD,CAAC;EACF,CAAC,CAAC;EAEF,OAAOF,UAAU;AAClB;AAACD,EAAA,CAvBuBD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}