{"ast":null,"code":"import{useEffect,useState}from\"react\";export let BREAKPOINT=/*#__PURE__*/function(BREAKPOINT){BREAKPOINT[BREAKPOINT[\"MOBILE\"]=600]=\"MOBILE\";BREAKPOINT[BREAKPOINT[\"MIDSIZE\"]=1000]=\"MIDSIZE\";BREAKPOINT[BREAKPOINT[\"DESKTOP\"]=1200]=\"DESKTOP\";return BREAKPOINT;}({});export default function useBreakpoint(){const[breakpoint,setBreakpoint]=useState(null);const validateBreakpoint=()=>{if(window.matchMedia(`(max-width: ${BREAKPOINT.MOBILE}px)`).matches){setBreakpoint(BREAKPOINT.MOBILE);return breakpoint;}if(window.matchMedia(`(max-width: ${BREAKPOINT.MIDSIZE}px)`).matches){setBreakpoint(BREAKPOINT.MIDSIZE);return breakpoint;}else setBreakpoint(BREAKPOINT.DESKTOP);};useEffect(()=>{validateBreakpoint();window.addEventListener(\"resize\",validateBreakpoint);return()=>{window.removeEventListener(\"resize\",validateBreakpoint);};});return breakpoint;}","map":{"version":3,"names":["useEffect","useState","BREAKPOINT","useBreakpoint","breakpoint","setBreakpoint","validateBreakpoint","window","matchMedia","MOBILE","matches","MIDSIZE","DESKTOP","addEventListener","removeEventListener"],"sources":["/Users/trcxi/ducky-times/ducky-times-app/src/helpers/useBreakpoint.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport enum BREAKPOINT {\n    MOBILE = 600,\n    MIDSIZE = 1000,\n    DESKTOP = 1200,\n}\n\nexport default function useBreakpoint() {\n\tconst [breakpoint, setBreakpoint] = useState<BREAKPOINT | null>(null);\n\n\tconst validateBreakpoint = () => {\n\t\tif (window.matchMedia(`(max-width: ${BREAKPOINT.MOBILE}px)`).matches) {\n\t\t\tsetBreakpoint(BREAKPOINT.MOBILE);\n\t\t\treturn breakpoint;\n\t\t}\n\t\tif (window.matchMedia(`(max-width: ${BREAKPOINT.MIDSIZE}px)`).matches) {\n\t\t\tsetBreakpoint(BREAKPOINT.MIDSIZE);\n\t\t\treturn breakpoint;\n\t\t} else setBreakpoint(BREAKPOINT.DESKTOP);\n\t};\n\n\tuseEffect(() => {\n\t\tvalidateBreakpoint();\n\t\twindow.addEventListener(\"resize\", validateBreakpoint);\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"resize\", validateBreakpoint);\n\t\t};\n\t});\n\n\treturn breakpoint;\n}\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAE3C,UAAY,CAAAC,UAAU,uBAAVA,UAAU,EAAVA,UAAU,CAAVA,UAAU,yBAAVA,UAAU,CAAVA,UAAU,4BAAVA,UAAU,CAAVA,UAAU,kCAAV,CAAAA,UAAU,OAMtB,cAAe,SAAS,CAAAC,aAAaA,CAAA,CAAG,CACvC,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGJ,QAAQ,CAAoB,IAAI,CAAC,CAErE,KAAM,CAAAK,kBAAkB,CAAGA,CAAA,GAAM,CAChC,GAAIC,MAAM,CAACC,UAAU,CAAE,eAAcN,UAAU,CAACO,MAAO,KAAI,CAAC,CAACC,OAAO,CAAE,CACrEL,aAAa,CAACH,UAAU,CAACO,MAAM,CAAC,CAChC,MAAO,CAAAL,UAAU,CAClB,CACA,GAAIG,MAAM,CAACC,UAAU,CAAE,eAAcN,UAAU,CAACS,OAAQ,KAAI,CAAC,CAACD,OAAO,CAAE,CACtEL,aAAa,CAACH,UAAU,CAACS,OAAO,CAAC,CACjC,MAAO,CAAAP,UAAU,CAClB,CAAC,IAAM,CAAAC,aAAa,CAACH,UAAU,CAACU,OAAO,CAAC,CACzC,CAAC,CAEDZ,SAAS,CAAC,IAAM,CACfM,kBAAkB,CAAC,CAAC,CACpBC,MAAM,CAACM,gBAAgB,CAAC,QAAQ,CAAEP,kBAAkB,CAAC,CACrD,MAAO,IAAM,CACZC,MAAM,CAACO,mBAAmB,CAAC,QAAQ,CAAER,kBAAkB,CAAC,CACzD,CAAC,CACF,CAAC,CAAC,CAEF,MAAO,CAAAF,UAAU,CAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}